{"version":3,"sources":["services/auth/auth.js","components/table-toolbar/table-toolbar-styles.js","components/table-toolbar/table-toolbar.js","components/table-header/table-header-styles.js","components/table-header/table-header.js","components/table-body/table-body.js","components/alert-bar/alert-bar-styles.js","components/alert-bar/alert-bar.js","routes/certs/certs-table-styles.js","routes/certs/certs-table.js","services/api/scep.js","components/csr-info/csr-info.js","services/api/enroller.js","components/csr-modal-edit/csr-modal-edit-styles.js","components/csr-modal-edit/csr-modal-edit.js","components/csr-modal/csr-modal.js","components/csr-edit/csr-edit-styles.js","components/csr-edit/csr-edit.js","components/csr-box/csr-box-styles.js","components/csr-box/csr-box.js","routes/csrs-list.js","routes/new/new-csr.js","routes/ca-list/ca-list-styles.js","routes/ca-list/ca-list.js","services/api/ca.js","utils/scroll-to-top.js","components/app-bar/app-bar-styles.js","components/app-bar/app-bar.js","index.js"],"names":["initOptions","url","protocol","realm","process","clientId","onLoad","keycloak","updateKeycloakToken","updateToken","getKeycloakToken","token","isAuthorized","roles","some","r","hasRealmRole","resource","hasResourceRole","AuthorizedElement","children","PrivateRoute","Component","component","rest","render","props","key","uuid","to","pathname","useStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","title","flex","CertsTableToolbar","classes","numSelected","Toolbar","className","Typography","variant","id","Tooltip","IconButton","aria-label","FilterList","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","headCells","numeric","disablePadding","label","CertsTableHeader","order","orderBy","onRequestSort","TableHead","TableRow","TableCell","map","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","descendingComparator","a","b","CertsTableBody","handleClick","onHandleClick","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","crts","slice","page","rowsPerPage","crt","name","crtClick","status","isItemSelected","dn","isSelected","labelId","expirationDate","replace","revocationDate","hover","role","aria-checked","tabIndex","selected","Checkbox","checked","inputProps","disabled","indeterminate","scope","serial","keySize","crtpath","emptyRows","style","colSpan","error","backgroundColor","palette","dark","success","icon","fontSize","opacity","marginRight","message","display","alignItems","AlertBar","useState","isOpen","setIsOpen","handleClose","setMessage","type","typeClassName","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","aria-describedby","Error","CheckCircle","action","color","Close","paper","paddingBottom","marginBottom","table","minWidth","CertsTable","setOrder","setOrderBy","setSelected","setPage","setRowsPerPage","setError","revokeError","setRevokeError","correctRevoke","setCorrectRevoke","setCRTs","isLoaded","setIsLoaded","getCRTS","fetch","method","headers","Authorization","then","response","ok","json","result","undefined","CRTs","text","catch","revokeCRTS","fetchUrl","body","JSON","stringify","revokeCRT","useEffect","Math","min","length","Fragment","CircularProgress","Container","maxWidth","Paper","TableContainer","Table","aria-labelledby","size","rowCount","selectedIndex","indexOf","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Box","textAlign","Button","selectedCRT","find","CSRInfo","ou","csr","mail","csrPath","csrpath","cn","c","st","l","o","acceptCSR","denyCSR","revokeCSR","removeCSR","downloadCRT","button","CSRModalEdit","newOptions","Grid","item","xs","onCSRStatusChange","deniedOptions","approbedOptions","blob","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","CSRModal","setCSR","handleChange","onModalChange","Dialog","DialogTitle","DialogContent","dividers","DialogActions","container","operation","data","console","log","onCSRUpdate","setOpCorrect","setOpError","propTypes","PropTypes","object","func","isRequired","CSREdit","isModalOpen","setIsModalOpen","downloadCSR","fullWidth","CSRBox","CSRsList","csrs","setCSRs","opError","opCorrect","getCSRS","_embedded","toString","NewCSR","CSRValue","setCSRValue","correct","setCorrect","onSubmit","preventDefault","TextField","multiline","rows","onChange","list","borderRadius","background","card","CAsList","CAInfo","setCAInfo","CAs","setCAs","selectedCA","setSelectedCA","getCAS","handleCAChange","CA","getCAInfo","handleRevoke","deleteCA","List","ca","i","ca_name","ListItem","ListItemText","primary","Divider","Card","CardContent","key_type","key_bits","ScrollToTop","useLocation","scrollTo","flexGrow","default","menuButton","toolbar","borderBottom","divider","typoAppBarTitle","marginLeft","LamassuAppBar","AppBar","elevation","Avatar","alt","src","noWrap","Link","dotenv","config","Keycloak","init","auth","CssBaseline","exact","path","getElementById","location","reload"],"mappings":"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","file":"static/js/main.aef64262.chunk.js","sourcesContent":["import React from 'react';\nimport uuid from 'react-uuid';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst protocol = process.env.REACT_APP_KEYCLOAK_PROTOCOL;\nconst host = process.env.REACT_APP_KEYCLOAK_HOST;\nconst port = process.env.REACT_APP_KEYCLOAK_PORT;\nconst realm = process.env.REACT_APP_KEYCLOAK_REALM;\nconst clientId = process.env.REACT_APP_KEYCLOAK_CLIENT_ID;\n\nconst url = protocol + '://' + host + ':' + port + '/auth';\n\nlet initOptions = {\n  url: url,\n  realm: realm,\n  clientId: clientId,\n  onLoad: 'login-required',\n};\n\nvar keycloak = null;\n\nexport function initKeycloak() {\n  keycloak = new window.Keycloak({\n    url: initOptions.url,\n    realm: initOptions.realm,\n    clientId: initOptions.clientId,\n  });\n  return keycloak.init({ onLoad: initOptions.onLoad });\n}\n\nexport function updateKeycloakToken() {\n  return keycloak.updateToken(30);\n}\n\nexport function getKeycloakToken() {\n  return keycloak.token;\n}\n\nexport function goToProfile() {\n  return (\n    protocol + '://' + host + ':' + port + '/auth/realms/' + realm + '/account/'\n  );\n}\n\nexport function isAuthorized(roles) {\n  if (keycloak && roles) {\n    return roles.some((r) => {\n      const realm = keycloak.hasRealmRole(r);\n      const resource = keycloak.hasResourceRole(r);\n      return realm || resource;\n    });\n  }\n}\n\nexport function AuthorizedElement({ roles, children }) {\n  return isAuthorized(roles) && children;\n}\n\nexport function PrivateRoute({ component: Component, roles, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return isAuthorized(roles) ? (\n          <Component key={uuid()} {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/' }} />\n        );\n      }}\n    />\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterList as FilterListIcon } from '@material-ui/icons';\nimport { Typography, IconButton, Toolbar, Tooltip } from '@material-ui/core';\n\nimport { useStyles } from './table-toolbar-styles';\n\nexport default function CertsTableToolbar(props) {\n  const classes = useStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar className={classes.root}>\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        Signed Certificates\n      </Typography>\n\n      {numSelected <= 0 && (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n}\n\nCertsTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  TableSortLabel,\n  TableHead,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\n\nimport { useStyles } from './table-header-styles';\n\nconst headCells = [\n  {\n    id: 'dn',\n    numeric: false,\n    disablePadding: true,\n    label: 'Distinguished Name',\n  },\n  { id: 'status', numeric: false, disablePadding: false, label: 'Status' },\n  {\n    id: 'expirationDate',\n    numeric: false,\n    disablePadding: false,\n    label: 'Expiration Date',\n  },\n  {\n    id: 'revocationDate',\n    numeric: false,\n    disablePadding: false,\n    label: 'Revocation Date',\n  },\n  {\n    id: 'serial',\n    numeric: false,\n    disablePadding: false,\n    label: 'Serial Number',\n  },\n  { id: 'key', numeric: false, disablePadding: false, label: 'Key Algorithm' },\n  { id: 'keySize', numeric: true, disablePadding: false, label: 'Key Size' },\n  { id: 'filename', numeric: false, disablePadding: false, label: 'Filename' },\n];\n\nexport default function CertsTableHeader(props) {\n  const { order, orderBy, onRequestSort } = props;\n  const classes = useStyles();\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\" />\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nCertsTableHeader.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableBody, TableRow, TableCell, Checkbox } from '@material-ui/core';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function CertsTableBody(props) {\n  const handleClick = (event, property) => {\n    props.onHandleClick(event, property);\n  };\n\n  const isSelected = (name) => {\n    return props.isSelected(name);\n  };\n\n  return (\n    <TableBody>\n      {stableSort(props.crts, getComparator(props.order, props.orderBy))\n        .slice(\n          props.page * props.rowsPerPage,\n          props.page * props.rowsPerPage + props.rowsPerPage\n        )\n        .map((crt, index) => {\n          const crtClick = crt.status === 'V' ? handleClick : () => {};\n          const isItemSelected = isSelected(crt.dn);\n          const labelId = `enhanced-table-checkbox-${index}`;\n          const expirationDate = crt.expirationDate.replace(\n            /^(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)Z$/,\n            '$1/$2/$3 $4:$5:$6'\n          );\n          const revocationDate =\n            crt.revocationDate !== '' &&\n            crt.revocationDate.replace(\n              /^(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)Z$/,\n              '$1/$2/$3 $4:$5:$6'\n            );\n          return (\n            <TableRow\n              hover\n              onClick={(event) => crtClick(event, crt.dn)}\n              role=\"checkbox\"\n              aria-checked={isItemSelected}\n              tabIndex={-1}\n              key={crt.dn}\n              selected={isItemSelected}\n            >\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={isItemSelected}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                  disabled={crt.status === 'R'}\n                  indeterminate={crt.status === 'R'}\n                />\n              </TableCell>\n              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                {crt.dn}\n              </TableCell>\n              <TableCell align=\"left\">\n                {crt.status === 'V' ? 'Valid' : 'Revoked'}\n              </TableCell>\n              <TableCell align=\"left\">{expirationDate}</TableCell>\n              <TableCell align=\"left\">{revocationDate}</TableCell>\n              <TableCell align=\"right\">{crt.serial}</TableCell>\n              <TableCell align=\"left\">{crt.key}</TableCell>\n              <TableCell align=\"right\">{crt.keySize}</TableCell>\n              <TableCell align=\"left\">{crt.crtpath}</TableCell>\n            </TableRow>\n          );\n        })}\n      {props.emptyRows > 0 && (\n        <TableRow style={{ height: 33 * props.emptyRows }}>\n          <TableCell colSpan={6} />\n        </TableRow>\n      )}\n    </TableBody>\n  );\n}\n\nCertsTableBody.propTypes = {\n  onHandleClick: PropTypes.func.isRequired,\n  isSelected: PropTypes.func.isRequired,\n  emptyRows: PropTypes.number.isRequired,\n  crts: PropTypes.array.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n    margin: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: theme.palette.success.dark,\n    margin: theme.spacing(1),\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport {\n  Error as ErrorIcon,\n  CheckCircle as CheckCircleIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\n\nimport { useStyles } from './alert-bar-styles';\n\nexport default function AlertBar(props) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const handleClose = () => {\n    setIsOpen(false);\n    props.setMessage(null);\n  };\n\n  const classes = useStyles();\n  const type = props.type;\n  const typeClassName = type === 'error' ? classes.error : classes.success;\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={typeClassName}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            {type === 'error' ? (\n              <ErrorIcon className={classes.icon} />\n            ) : (\n              <CheckCircleIcon className={classes.icon} />\n            )}\n            {props.message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nAlertBar.propTypes = {\n  message: PropTypes.string.isRequired,\n  setMessage: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n    paddingBottom: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Table,\n  TableContainer,\n  TablePagination,\n  Paper,\n  CircularProgress,\n  Container,\n  Button,\n  Box,\n} from '@material-ui/core';\n\nimport CertsTableToolbar from '../../components/table-toolbar';\nimport CertsTableHeader from '../../components/table-header';\nimport CertsTableBody from '../../components/table-body';\nimport AlertBar from '../../components/alert-bar';\nimport { getCRTs, revokeCRT } from '../../services/api/scep';\nimport { useStyles } from './certs-table-styles';\nimport { updateKeycloakToken } from '../../services/auth/auth';\n\nexport default function CertsTable() {\n  const classes = useStyles();\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('dn');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [error, setError] = useState(null);\n  const [revokeError, setRevokeError] = useState(null);\n  const [correctRevoke, setCorrectRevoke] = useState(null);\n  const [crts, setCRTs] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getCRTS = () => {\n    updateKeycloakToken().success(() => {\n      getCRTs()\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((result) => {\n              if (result.CRTs !== undefined) {\n                setIsLoaded(true);\n                setCRTs(result.CRTs.CRTs);\n              } else {\n                setIsLoaded(false);\n                setError('Database is empty');\n              }\n            });\n          } else {\n            response.text().then((text) => {\n              setIsLoaded(false);\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  const revokeCRTS = (crt) => {\n    updateKeycloakToken().success(() => {\n      revokeCRT(crt)\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((result) => {\n              getCRTS();\n              setRevokeError(null);\n              setCorrectRevoke('Certificate successfully revoked');\n            });\n          } else {\n            response.text().then((text) => {\n              getCRTS();\n              setRevokeError(text);\n              setCorrectRevoke(null);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  useEffect(() => {\n    getCRTS();\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    if (selectedIndex !== -1) {\n      setSelected([]);\n    } else {\n      setSelected([name]);\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleRevokeClick = () => {\n    const selectedCRT = crts.find((crt) => crt.dn === selected[0]);\n    revokeCRTS(selectedCRT);\n    setSelected([]);\n  };\n\n  const isSelected = (name) => {\n    return selected.indexOf(name) !== -1;\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, crts.length - page * rowsPerPage);\n\n  return (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {correctRevoke !== null && (\n        <AlertBar\n          setMessage={setCorrectRevoke}\n          message={correctRevoke}\n          type=\"success\"\n        />\n      )}\n      {revokeError !== null && (\n        <AlertBar\n          setMessage={setRevokeError}\n          message={revokeError}\n          type=\"error\"\n        />\n      )}\n      {error === null && !isLoaded && crts !== null && <CircularProgress />}\n      {error === null && isLoaded && crts !== null && (\n        <Container maxWidth=\"lg\">\n          <Paper className={classes.paper}>\n            <CertsTableToolbar numSelected={selected.length} />\n            <TableContainer>\n              <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                size=\"medium\"\n                aria-label=\"enhanced table\"\n              >\n                <CertsTableHeader\n                  numSelected={selected.length}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={crts.length}\n                />\n                <CertsTableBody\n                  onHandleClick={handleClick}\n                  isSelected={isSelected}\n                  emptyRows={emptyRows}\n                  crts={crts}\n                  order={order}\n                  orderBy={orderBy}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                />\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={crts.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            <Box textAlign=\"center\">\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleRevokeClick}\n                disabled={selected.length === 0}\n              >\n                Revoke\n              </Button>\n            </Box>\n          </Paper>\n        </Container>\n      )}\n    </React.Fragment>\n  );\n}\n","import { getKeycloakToken } from '../../services/auth/auth';\n\nconst protocol = process.env.REACT_APP_SCEP_PROTOCOL;\nconst host = process.env.REACT_APP_SCEP_HOST;\nconst port = process.env.REACT_APP_SCEP_PORT;\nconst path = process.env.REACT_APP_SCEP_PATH;\n\nexport function revokeCRT(crt) {\n  const fetchUrl =\n    protocol + '://' + host + ':' + port + path + '/' + crt.serial;\n  return fetch(fetchUrl, {\n    method: 'PUT',\n    body: JSON.stringify(crt),\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function getCRTs() {\n  const fetchUrl = protocol + '://' + host + ':' + port + path;\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nexport default function CSRInfo(props) {\n  const ou = props.csr.ou;\n  const mail = props.csr.mail;\n  const csrPath = props.csr.csrpath;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"subtitle1\" component=\"h2\">\n        ID: {props.csr.id} CN: {props.csr.cn} Status: {props.csr.status}\n      </Typography>\n      <Typography variant=\"body1\" component=\"h3\">\n        C: {props.csr.c} ST: {props.csr.st} L: {props.csr.l} O: {props.csr.o}\n      </Typography>\n      <Typography variant=\"body2\" component=\"h4\">\n        {ou !== '' && <p>OU: {ou} </p>}\n        {mail !== '' && <p>EMAIL: {mail} </p>}\n        {csrPath !== '' && <p>CSRFilePath: {csrPath}</p>}\n      </Typography>\n    </React.Fragment>\n  );\n}\n\nCSRInfo.propTypes = {\n  csr: PropTypes.object,\n};\n","import { getKeycloakToken } from '../auth/auth';\n\nconst protocol = process.env.REACT_APP_ENROLLER_PROTOCOL;\nconst host = process.env.REACT_APP_ENROLLER_HOST;\nconst port = process.env.REACT_APP_ENROLLER_PORT;\nconst path = process.env.REACT_APP_ENROLLER_PATH;\n\nexport function acceptCSR(csr) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + csr.id;\n  csr.status = 'APPROBED';\n  return fetch(fetchUrl, {\n    method: 'PUT',\n    body: JSON.stringify(csr),\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function denyCSR(csr) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + csr.id;\n  csr.status = 'DENIED';\n  return fetch(fetchUrl, {\n    method: 'PUT',\n    body: JSON.stringify(csr),\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function revokeCSR(csr) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + csr.id;\n  csr.status = 'REVOKED';\n  return fetch(fetchUrl, {\n    method: 'PUT',\n    body: JSON.stringify(csr),\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function removeCSR(csr) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + csr.id;\n  return fetch(fetchUrl, {\n    method: 'DELETE',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function downloadCSR(csr) {\n  const fetchUrl =\n    protocol + '://' + host + ':' + port + path + '/' + csr.id + '/file';\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function getCSRs() {\n  const fetchUrl = protocol + '://' + host + ':' + port + path;\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function postCSR(data) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path;\n  return fetch(fetchUrl, {\n    method: 'POST',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n      'Content-Type': 'application/pkcs10',\n    },\n    body: data,\n  });\n}\n\nexport function downloadCRT(csr) {\n  const fetchUrl =\n    protocol + '://' + host + ':' + port + path + '/' + csr.id + '/crt';\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  button: {\n    width: '100%',\n  },\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Grid, Button } from '@material-ui/core';\nimport AlertBar from '../alert-bar';\n\nimport {\n  acceptCSR,\n  denyCSR,\n  removeCSR,\n  revokeCSR,\n} from '../../services/api/enroller';\nimport { useStyles } from './csr-modal-edit-styles';\n\nimport { downloadCRT } from '../../services/api/enroller';\nimport { updateKeycloakToken } from '../../services/auth/auth';\n\nexport default function CSRModalEdit(props) {\n  const [error, setError] = useState(null);\n\n  const handleAcceptChange = () => {\n    props.onCSRStatusChange(acceptCSR);\n  };\n\n  const handleDenyChange = () => {\n    props.onCSRStatusChange(denyCSR);\n  };\n\n  const handleRemoveChange = () => {\n    props.onCSRStatusChange(removeCSR);\n  };\n\n  const handleRevokeChange = () => {\n    props.onCSRStatusChange(revokeCSR);\n  };\n\n  const handleDownloadCert = () => {\n    updateKeycloakToken().success(() => {\n      downloadCRT(props.csr)\n        .then((response) => {\n          if (response.ok) {\n            response.blob().then((blob) => {\n              setError(null);\n              const url = window.URL.createObjectURL(new Blob([blob]));\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', `crt-${props.csr.id}.crt`);\n              document.body.appendChild(link);\n              link.click();\n              link.parentNode.removeChild(link);\n            });\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  const classes = useStyles();\n\n  const newOptions = (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      <Grid item xs={7}>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          onClick={handleAcceptChange}\n          className={classes.button}\n        >\n          Accept\n        </Button>\n      </Grid>\n      <Grid item xs={5}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleDenyChange}\n          className={classes.button}\n        >\n          Deny\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n\n  const deniedOptions = (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      <Grid item xs={12}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={handleRemoveChange}\n          className={classes.button}\n        >\n          Remove\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n\n  const approbedOptions = (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      <Grid item xs={7}>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          onClick={handleDownloadCert}\n          className={classes.button}\n        >\n          Download Certificate\n        </Button>\n      </Grid>\n      <Grid item xs={5}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={handleRevokeChange}\n          className={classes.button}\n        >\n          Revoke\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n\n  switch (props.csr.status) {\n    case 'NEW':\n      return newOptions;\n    case 'APPROBED':\n      return approbedOptions;\n    case 'DENIED':\n      return deniedOptions;\n    case 'REVOKED':\n      return deniedOptions;\n    default:\n      return newOptions;\n  }\n}\n\nCSRModalEdit.propTypes = {\n  csr: PropTypes.object,\n  onCSRStatusChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@material-ui/core';\n\nimport CSRInfo from '../csr-info';\nimport CSRModalEdit from '../csr-modal-edit';\nimport { updateKeycloakToken } from '../../services/auth/auth';\n\nexport default function CSRModal(props) {\n  const [csr, setCSR] = useState(props.csr);\n\n  const handleChange = () => {\n    props.onModalChange();\n  };\n\n  const handleInputChange = (operation) => {\n    updateKeycloakToken().success(() => {\n      operation(props.csr)\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((data) => {\n              console.log(data);\n              props.onCSRUpdate();\n              setCSR(data);\n              props.setOpCorrect('Operation successful');\n              props.setOpError(null);\n            });\n          } else {\n            response.text().then((text) => {\n              setCSR(props.csr);\n              props.setOpError(text);\n              props.setOpCorrect(null);\n            });\n          }\n        })\n        .catch((error) => props.setOpError(error.message));\n      handleChange();\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog\n        onClose={handleChange}\n        aria-labelledby=\"simple-dialog-title\"\n        open={props.open}\n      >\n        <DialogTitle>CSR Details</DialogTitle>\n        <DialogContent dividers>\n          <CSRInfo csr={csr} />\n        </DialogContent>\n        <DialogActions>\n          <Grid container spacing={2}>\n            <CSRModalEdit csr={csr} onCSRStatusChange={handleInputChange} />\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nCSRModal.propTypes = {\n  csr: PropTypes.object,\n  open: PropTypes.bool.isRequired,\n  onModalChange: PropTypes.func.isRequired,\n  onCSRUpdate: PropTypes.func.isRequired,\n  setOpError: PropTypes.func,\n  setOpCorrect: PropTypes.func,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  button: {\n    width: '100%',\n  },\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Grid, Button } from '@material-ui/core';\n\nimport CSRModal from '../csr-modal';\nimport AlertBar from '../alert-bar';\nimport { downloadCRT, downloadCSR } from '../../services/api/enroller';\nimport {\n  AuthorizedElement,\n  updateKeycloakToken,\n} from '../../services/auth/auth';\nimport { useStyles } from './csr-edit-styles';\n\nexport default function CSREdit(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleDetailsChange = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalChange = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleDownloadCSRChange = () => {\n    updateKeycloakToken().success(() =>\n      downloadCSR(props.csr)\n        .then((response) => {\n          if (response.ok) {\n            response.blob().then((blob) => {\n              setError(null);\n              const url = window.URL.createObjectURL(new Blob([blob]));\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', `crt-${props.csr.id}.crt`);\n              document.body.appendChild(link);\n              link.click();\n              link.parentNode.removeChild(link);\n            });\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message))\n    );\n  };\n\n  const handleDownloadCRTChange = () => {\n    updateKeycloakToken().success(() =>\n      downloadCRT(props.csr)\n        .then((response) => {\n          if (response.ok) {\n            response.blob().then((blob) => {\n              setError(null);\n              const url = window.URL.createObjectURL(new Blob([blob]));\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', `crt-${props.csr.id}.crt`);\n              document.body.appendChild(link);\n              link.click();\n              link.parentNode.removeChild(link);\n            });\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message))\n    );\n  };\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      <Grid item xs={12}>\n        <AuthorizedElement roles={['admin']}>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <AuthorizedElement roles={['admin']}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleDetailsChange}\n                  className={classes.button}\n                >\n                  Details\n                </Button>\n              </AuthorizedElement>\n              <CSRModal\n                csr={props.csr}\n                open={isModalOpen}\n                onModalChange={handleModalChange}\n                setOpError={props.setOpError}\n                setOpCorrect={props.setOpCorrect}\n                onCSRUpdate={props.onCSRUpdate}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleDownloadCSRChange}\n                className={classes.button}\n              >\n                Download\n              </Button>\n            </Grid>\n          </Grid>\n        </AuthorizedElement>\n        <AuthorizedElement roles={['operator']}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={props.csr.status !== 'APPROBED'}\n            onClick={handleDownloadCRTChange}\n            className={classes.button}\n          >\n            Download Certificate\n          </Button>\n        </AuthorizedElement>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nCSREdit.propTypes = {\n  csr: PropTypes.object,\n  onCSRUpdate: PropTypes.func.isRequired,\n  setOpError: PropTypes.func,\n  setOpCorrect: PropTypes.func,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  root: {\n    padding: '15px 15px 15px  15px',\n    margin: '10px',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Paper, Grid } from '@material-ui/core';\n\nimport CSRInfo from '../csr-info';\nimport CSREdit from '../csr-edit';\nimport { useStyles } from './csr-box-styles';\n\nexport default function CSRBox(props) {\n  const classes = useStyles();\n  return (\n    <Grid item xs={4}>\n      <Paper className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <CSRInfo csr={props.csr} />\n          </Grid>\n          <CSREdit\n            csr={props.csr}\n            setOpError={props.setOpError}\n            setOpCorrect={props.setOpCorrect}\n            onCSRUpdate={props.onCSRUpdate}\n          />\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n\nCSRBox.propTypes = {\n  csr: PropTypes.object,\n  onCSRUpdate: PropTypes.func.isRequired,\n  setOpError: PropTypes.func,\n  setOpCorrect: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Grid, CircularProgress } from '@material-ui/core';\n\nimport CSRBox from '../components/csr-box';\nimport AlertBar from '../components/alert-bar';\nimport { getCSRs } from '../services/api/enroller';\nimport { updateKeycloakToken } from '../services/auth/auth';\n\nexport default function CSRsList() {\n  const [error, setError] = useState(null);\n  const [csrs, setCSRs] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [opError, setOpError] = useState(null);\n  const [opCorrect, setOpCorrect] = useState(null);\n\n  const getCSRS = () => {\n    updateKeycloakToken().success(() => {\n      getCSRs()\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((result) => {\n              if (result._embedded !== undefined) {\n                setIsLoaded(true);\n                setCSRs(result._embedded.csr);\n              }\n            });\n          } else {\n            response.text().then((text) => {\n              setIsLoaded(false);\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  useEffect(() => {\n    getCSRS();\n  }, []);\n\n  return (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {opError !== null && (\n        <AlertBar setMessage={setOpError} message={opError} type=\"error\" />\n      )}\n      {opCorrect !== null && (\n        <AlertBar\n          setMessage={setOpCorrect}\n          message={opCorrect}\n          type=\"success\"\n        />\n      )}\n      {error === null && !isLoaded && csrs !== null && <CircularProgress />}\n      {error === null && isLoaded && csrs !== null && (\n        <Grid container spacing={2}>\n          {csrs.length > 1 ? (\n            csrs.map((csr) => (\n              <CSRBox\n                key={csr.id.toString()}\n                csr={csr}\n                setOpError={setOpError}\n                setOpCorrect={setOpCorrect}\n                onCSRUpdate={getCSRS}\n              />\n            ))\n          ) : (\n            <CSRBox\n              key={csrs.id.toString()}\n              csr={csrs}\n              setOpError={setOpError}\n              setOpCorrect={setOpCorrect}\n              onCSRUpdate={getCSRS}\n            />\n          )}\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\n\nimport {\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport { postCSR } from '../../services/api/enroller';\nimport { updateKeycloakToken } from '../../services/auth/auth';\nimport AlertBar from '../../components/alert-bar';\n\nexport default function NewCSR() {\n  const [CSRValue, setCSRValue] = useState('');\n  const [error, setError] = useState(null);\n  const [correct, setCorrect] = useState(null);\n\n  const handleValueChange = (event) => {\n    setCSRValue(event.target.value);\n  };\n\n  const handleValueSubmit = (event) => {\n    updateKeycloakToken().success(() => {\n      postCSR(CSRValue)\n        .then((response) => {\n          if (response.ok) {\n            setCSRValue('');\n            setError(null);\n            setCorrect('CSR successfully submmited');\n          } else {\n            response.text().then((text) => {\n              setCSRValue('');\n              setError(text);\n              setCorrect(null);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n    event.preventDefault();\n  };\n\n  return (\n    <React.Fragment>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {correct !== null && (\n        <AlertBar setMessage={setCorrect} message={correct} type=\"success\" />\n      )}\n      <Container maxWidth=\"sm\">\n        <form onSubmit={handleValueSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">\n                Insert your CSR (Certificate Signing Request)\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Insert here\"\n                multiline\n                fullWidth\n                rows={20}\n                onChange={handleValueChange}\n                value={CSRValue}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Insert\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  list: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 3,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  card: {\n    padding: '0px',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Container,\n  Button,\n} from '@material-ui/core';\n\nimport { deleteCA, getCAInfo, getCAs } from '../../services/api/ca';\nimport { updateKeycloakToken } from '../../services/auth/auth';\nimport AlertBar from '../../components/alert-bar';\n\nimport { useStyles } from './ca-list-styles';\n\nexport default function CAsList() {\n  const [CAInfo, setCAInfo] = useState(null);\n  const [CAs, setCAs] = useState(null);\n  const [selectedCA, setSelectedCA] = useState(null);\n  const [error, setError] = useState(null);\n  const [correct, setCorrect] = useState(null);\n\n  const classes = useStyles();\n\n  const getCAS = () => {\n    updateKeycloakToken().success(() => {\n      getCAs()\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((result) => {\n              if (result.CAs !== undefined) {\n                setCAs(result.CAs.CAs);\n                setError(null);\n              }\n            });\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  const handleCAChange = (CA) => {\n    setSelectedCA(CA);\n    updateKeycloakToken().success(() => {\n      getCAInfo(CA)\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((result) => {\n              if (result.CAInfo !== undefined) {\n                setCAInfo(result.CAInfo);\n                setError(null);\n              }\n            });\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  const handleRegister = (CA) => {\n    setCorrect(CA + ' successfully registered');\n  };\n\n  const handleRevoke = (CA) => {\n    updateKeycloakToken().success(() => {\n      deleteCA(CA)\n        .then((response) => {\n          if (response.ok) {\n            setCorrect(selectedCA + ' successfully revoked');\n            getCAS();\n            setSelectedCA(null);\n            setCAInfo(null);\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  useEffect(() => {\n    getCAS();\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\">\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {correct !== null && (\n        <AlertBar setMessage={setCorrect} message={correct} type=\"success\" />\n      )}\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">List of registered CAs</Typography>\n            </Grid>\n            {CAs !== null && (\n              <Grid item xs={12}>\n                <List component=\"nav\" className={classes.list}>\n                  {CAs.map((ca, i) => (\n                    <React.Fragment key={ca.ca_name}>\n                      <ListItem\n                        key={ca.ca_name}\n                        button\n                        onClick={() => handleCAChange(ca.ca_name)}\n                      >\n                        <ListItemText key={ca.ca_name} primary={ca.ca_name} />\n                      </ListItem>\n                      {i + 1 < CAs.length && <Divider />}\n                    </React.Fragment>\n                  ))}\n                </List>\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container spacing={2}>\n            {CAInfo !== null && (\n              <React.Fragment>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\">CA detailed information</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Card variant=\"outlined\" className={classes.card}>\n                    <CardContent>\n                      <Typography variant=\"subtitle1\">\n                        CN: {CAInfo.cn}\n                        <br />\n                        Key Type: {CAInfo.key_type}\n                        <br />\n                        Key Bits: {CAInfo.key_bits}\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        C: {CAInfo.c}\n                        <br />\n                        ST: {CAInfo.st}\n                        <br />\n                        L: {CAInfo.l}\n                        <br />\n                        O: {CAInfo.o}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={selectedCA == null}\n            onClick={() => handleRegister(selectedCA)}\n          >\n            Register into Cloud provider\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={selectedCA == null}\n            onClick={() => handleRevoke(selectedCA)}\n          >\n            Revoke CA\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { getKeycloakToken } from '../auth/auth';\n\nconst protocol = process.env.REACT_APP_CA_PROTOCOL;\nconst host = process.env.REACT_APP_CA_HOST;\nconst port = process.env.REACT_APP_CA_PORT;\nconst path = process.env.REACT_APP_CA_PATH;\n\nexport function getCAs() {\n  const fetchUrl = protocol + '://' + host + ':' + port + path;\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function getCAInfo(CA) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + CA;\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function deleteCA(CA) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + CA;\n  return fetch(fetchUrl, {\n    method: 'DELETE',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginBottom: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  typoAppBarTitle: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(1),\n  },\n}));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AppBar, Typography, Toolbar, Button, Avatar } from '@material-ui/core';\n\nimport { goToProfile } from '../../services/auth/auth';\nimport { useStyles } from './app-bar-styles';\n\nimport { AuthorizedElement } from '../../services/auth/auth';\n\nexport default function LamassuAppBar() {\n  const handleProfileChange = () => {\n    const accountUrl = goToProfile();\n    window.open(accountUrl, '_blank');\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <Avatar\n            variant=\"square\"\n            alt=\"Lamassu Logo\"\n            src=\"lamassu_logo.png\"\n          ></Avatar>\n          <Typography variant=\"h6\" noWrap className={classes.typoAppBarTitle}>\n            Lamassu Enroller (RA)\n          </Typography>\n          <Button component={Link} to=\"/\" replace variant=\"text\">\n            Home\n          </Button>\n          <AuthorizedElement roles={['admin']}>\n            <Button component={Link} to=\"/cas\" replace variant=\"text\">\n              CAs\n            </Button>\n          </AuthorizedElement>\n          <AuthorizedElement roles={['operator']}>\n            <Button component={Link} to=\"/new\" replace variant=\"text\">\n              New\n            </Button>\n          </AuthorizedElement>\n          <AuthorizedElement roles={['admin']}>\n            <Button component={Link} to=\"/certs\" replace variant=\"text\">\n              Certificates list\n            </Button>\n          </AuthorizedElement>\n          <Button variant=\"text\" onClick={handleProfileChange}>\n            Account\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport uuid from 'react-uuid';\nimport 'typeface-roboto';\nimport { render } from 'react-dom';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport dotenv from 'dotenv';\n\nimport { CssBaseline } from '@material-ui/core';\n\nimport { initKeycloak } from './services/auth/auth';\nimport CertsTable from './routes/certs';\nimport CSRsList from './routes';\nimport NewCSR from './routes/new';\nimport CAsList from './routes/ca-list';\nimport ScrollToTop from './utils/scroll-to-top';\nimport LamassuAppBar from './components/app-bar';\n\nimport { PrivateRoute } from './services/auth/auth';\n\ndotenv.config();\n\ninitKeycloak().success((auth) => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    render(\n      <HashRouter>\n        <CssBaseline />\n        <LamassuAppBar />\n        <ScrollToTop />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <CSRsList key={uuid()} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/new\"\n            render={(props) => <NewCSR key={uuid()} {...props} />}\n          />\n          <PrivateRoute component={CAsList} path=\"/cas\" roles={['admin']} />\n          <PrivateRoute\n            component={CertsTable}\n            path=\"/certs\"\n            roles={['admin']}\n          />\n        </Switch>\n      </HashRouter>,\n      document.getElementById('root')\n    );\n  }\n});\n"],"sourceRoot":""}